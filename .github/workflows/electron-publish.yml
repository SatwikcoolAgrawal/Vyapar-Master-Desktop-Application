name: publish electron application

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

jobs:
  create_release_job:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: main

    - name: Get version from package.json
      id: get_version
      run: echo "VERSION=$(jq -r '.version' package.json)" >> $GITHUB_ENV

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.VERSION }}
        release_name: Release v${{ env.VERSION }}
        draft: false
        prerelease: false
    outputs:
      release_url: ${{ steps.create_release.outputs.upload_url }}

  build_on_mac:
    runs-on: macOS-latest
    needs: create_release_job
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: main

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: latest

    - name: Install dependencies
      run: npm install

    - name: Build on Mac
      run: npm run package
      env: 
        CI: false

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release_job.outputs.release_url }}
        asset_path: ./dist/vyapar-master-setup-mac.dmg
        asset_name: vyapar-master-setup-mac.dmg
        asset_content_type: application/x-apple-diskimage

  build_on_win:
    runs-on: windows-latest
    needs: create_release_job
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: main

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: latest

    - name: Install dependencies
      run: npm install

    - name: Build on Windows
      run: npm run package
      env: 
        CI: false

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release_job.outputs.release_url }}
        asset_path: ./dist/vyapar-master-setup-win.exe
        asset_name: vyapar-master-setup-win.exe
        asset_content_type: application/x-msdownload
